{"version":3,"sources":["webpack:///./src/graphql/query/menu.js","webpack:///./src/layouts/MainLayout/SideBar/SideBar.js","webpack:///./src/layouts/MainLayout/SideBar/Profile/Profile.js","webpack:///./src/layouts/MainLayout/SideBar/SidebarNav/SideBarNav.js"],"names":["MENU_QUERY","gql","useStyles","makeStyles","theme","drawer","width","breakpoints","up","marginTop","height","divider","margin","spacing","Container","styled","div","palette","white","SideBar","props","className","useContext","ResizeContext","open","setOpen","desktop","classes","useTheme","handleClose","useCallback","anchor","paper","onClose","variant","propTypes","PropTypes","string","avatar","name","Profile","user","alt","src","component","RouterLink","to","bio","object","defaultProps","item","display","paddingTop","paddingBottom","menu","fontFamily","color","blueGrey","justifyContent","textTransform","letterSpacing","fontWeight","typography","fontWeightMedium","backgroundColor","activeMenu","fontWeightLarge","error","main","icon","alignItems","marginRight","expandIcon","padding","ExpandIcon","isExpand","mappIcon","Settings","AccountCircle","Ballot","LocalAtm","Home","MenuListItem","node","depth","ActiveContext","active","setActive","useState","indexOf","link","exapend","setExpand","handleActive","e","handleCallapse","cmenu","edges","length","Icon","Fragment","clsx","disableGutters","style","paddingLeft","onClick","NavLink","fontSize","menuName","in","timeout","MenuList","menus","disablePadding","map","key","id","createContext","SideBarNav","location","useLocation","pathname","value","useMemo","useQuery","client","loading","data","message","Provider"],"mappings":"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","file":"6.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nexport const MENU_QUERY = gql`\r\n  query MenuQuery {\r\n    menus {\r\n      edgeCount\r\n      edges {\r\n        node {\r\n          id\r\n          menuType\r\n          menuId\r\n          menuName\r\n          link\r\n          icon\r\n          pmenu {\r\n            menuId\r\n            menuName\r\n            link\r\n            icon\r\n          }\r\n          cmenu {\r\n            edges {\r\n              node {\r\n                id\r\n                menuId\r\n                menuName\r\n                link\r\n                icon\r\n                cmenu {\r\n                  edges {\r\n                    node {\r\n                      id\r\n                      menuId\r\n                      menuName\r\n                      link\r\n                      icon\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } \r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","/* React */\r\nimport React, { useCallback, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Styled */\r\nimport styled from 'styled-components';\r\n\r\n/* Material-UI */\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport Divider from '@material-ui/core/Divider'; \r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\n/* Context */\r\nimport { ResizeContext } from '@src/App';\r\n\r\n/* Child Components */\r\nimport Profile from './Profile';\r\nimport SidebarNav from './SidebarNav';\r\n\r\n/* Styles Hook */\r\nconst useStyles = makeStyles( theme => ({\r\n  drawer: {\r\n    width: 240,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 64,\r\n      height: 'calc(100% - 64px)'\r\n    }\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n}));\r\n\r\n/* Styled Components */\r\nconst Container = styled.div`\r\n  background-color: ${({ theme })=> theme.palette.white };\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n\r\n  padding-left: ${({ theme })=> theme.spacing(1) }px;\r\n  padding-right: ${({ theme })=> theme.spacing(1) }px;\r\n  padding-top: ${({ theme })=> theme.spacing(2) }px;\r\n`;\r\n\r\n/* Main Component */\r\nconst SideBar = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  /* Context */\r\n  const { open, setOpen, desktop } = useContext(ResizeContext);\r\n  \r\n  /* Styles Hook */\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  /* Handlers */\r\n  const handleOpen = useCallback(()=>{\r\n    setOpen(true);\r\n  }, []);\r\n  const handleClose = useCallback(()=>{\r\n    setOpen(false);\r\n  }, []);\r\n  \r\n  /* Render */\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: classes.drawer\r\n      }}\r\n      onClose={ handleClose }\r\n      open={ open }\r\n      variant={ desktop ? 'persistent' : 'temporary' }\r\n    >\r\n      <Container theme={ theme }>\r\n        <Profile />\r\n        <Divider className={ classes.divider } />\r\n        <SidebarNav />\r\n      </Container>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nSideBar.propTypes = {\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default SideBar;","/* React */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Router */\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n/* Material-UI */\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/* Styled */\r\nimport styled from 'styled-components';\r\n\r\n/* Material Hook */\r\nconst useStyles = makeStyles( theme => ({\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n/* Styled Components */\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: fit-content;\r\n`;\r\n\r\n/* Main Component */\r\nconst Profile = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    user,\r\n    ...rest\r\n  } = props;\r\n  \r\n  /* Styles Hook */\r\n  const classes = useStyles();\r\n\r\n  /* Renderer */\r\n  return (\r\n    <Container\r\n      className={ className }\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={ classes.avatar }\r\n        src={ user.avatar }\r\n        component={ RouterLink }\r\n        to=\"/\"\r\n      />\r\n      <Typography\r\n        className={ classes.name }\r\n        variant=\"h4\"\r\n      >\r\n        { user.name }\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        { user.bio }\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string,\r\n  user: PropTypes.object,\r\n};\r\n\r\nProfile.defaultProps = {\r\n  user: {\r\n    name: 'Dochi',\r\n    avatar: '/public/images/avatars/dochi.jpeg',\r\n    bio: 'Developer'\r\n  },\r\n};\r\n\r\nexport default Profile;","/* React */\r\nimport React, { useMemo, useState, useEffect, useCallback, useContext, createContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Router */\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\n/* Material UI */\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n/* Material UI: icons */\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Ballot from '@material-ui/icons/Ballot';\r\nimport LocalAtm from '@material-ui/icons/LocalAtm';\r\nimport Home from '@material-ui/icons/Home';\r\n\r\n/* GraphQL */\r\nimport client from '@graphql/client';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { MENU_QUERY } from '@graphql/query/menu';\r\n\r\n/* Custom Components */\r\nimport ErrorBoundary from '@components/ErrorBoundary';\r\nimport { CircularProgress } from '@components/Progress';\r\n\r\n/* Clsx */\r\nimport clsx from 'clsx';\r\n\r\n/* Styles Hook */\r\nconst useStyles = makeStyles((theme)=>({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  menu: {\r\n    fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"],\r\n    color: blueGrey[800],\r\n    // paddingLeft: \"30px\",\r\n    justifyContent: 'flex-start',\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    width: '100%',\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    \"&:hover\": {\r\n      backgroundColor: blueGrey[50],\r\n    }\r\n  },\r\n  activeMenu: {\r\n    color: blueGrey[600],\r\n    backgroundColor: blueGrey[100],\r\n    fontWeight: theme.typography.fontWeightLarge,\r\n    '& $icon': {\r\n      color: theme.palette.error.main\r\n    }\r\n  },\r\n  icon: {\r\n    color: theme.palette.icon,\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  expandIcon: {\r\n    padding: '5px 2px',\r\n  },\r\n  divider: {\r\n    margin: \"2px 0\",\r\n  }\r\n}));\r\n\r\n/* Sub Component */\r\nconst ExpandIcon = ({ isExpand, open }) => (\r\n  isExpand ? ( open ? <ExpandLess /> : <ExpandMore />  ): null\r\n);\r\n\r\nfunction mappIcon(name){\r\n  switch( name ){\r\n    case \"Settings\":\r\n      return Settings;\r\n    case \"AccountCircle\":\r\n      return AccountCircle;\r\n    case \"Ballot\":\r\n      return Ballot;\r\n    case \"LocalAtm\":\r\n      return LocalAtm;\r\n      case \"Home\":\r\n        return Home;\r\n  }\r\n}\r\n\r\n/* Sub Component */\r\nconst MenuListItem = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    node,\r\n    depth,\r\n    ...rest\r\n  } = props;\r\n  \r\n  /* Context */\r\n  const { active, setActive } = useContext(ActiveContext);\r\n\r\n  /* State */\r\n  const [exapend, setExpand] = useState( active.indexOf(node.link) >= 0 );\r\n\r\n  /* Styles Hook */\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  \r\n  /* Handler: Set active. */\r\n  const handleActive = useCallback((e)=>{\r\n    if( node.link ){\r\n      setActive(node.link);\r\n    }\r\n  }, [active, node]);\r\n\r\n  /* Handler: exapend collapse. */\r\n  const handleCallapse = useCallback((e)=>{\r\n    setExpand(!exapend);\r\n  }, [exapend, node, active]);\r\n\r\n  /* Constant Variables */\r\n  const isExpand = node.cmenu && node.cmenu.edges.length > 0;\r\n  const Icon = mappIcon(node.icon);\r\n\r\n  /* Rendering */\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem\r\n        className={\r\n          clsx({\r\n            [classes.item]: true,\r\n          }, className)\r\n        }\r\n        disableGutters\r\n      >\r\n        <Button\r\n          className={ \r\n            clsx({\r\n              [classes.menu]: true,\r\n              [classes.activeMenu]: active == node.link,\r\n            })\r\n          }\r\n          style={{\r\n            paddingLeft: theme.spacing((depth)*(1.3))\r\n          }}\r\n          onClick={ handleActive }\r\n          { ...( node.link && {\r\n            component: NavLink,\r\n            to: node.link\r\n          }) }\r\n        >\r\n          { Icon && ( <Icon fontSize=\"small\" style={{ marginRight: 5}} /> ) }\r\n          { node.menuName }\r\n        </Button>\r\n        <IconButton\r\n          onClick={ handleCallapse }\r\n          className={ \r\n            clsx({\r\n              [classes.expandIcon]: true,\r\n            })\r\n          }\r\n        >\r\n          <ExpandIcon isExpand={ isExpand } open={ exapend } />\r\n        </IconButton>\r\n      </ListItem>\r\n      <Divider className={ classes.divider } />\r\n      {\r\n        isExpand && (\r\n          <Collapse in={ exapend } timeout=\"auto\" >\r\n            <MenuList menus={ node.cmenu } depth={ depth+1 }/>\r\n          </Collapse>\r\n        )\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n/* Sub Component */\r\nconst MenuList = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    depth,\r\n    menus: {\r\n      edges\r\n    },\r\n    ...rest\r\n  } = props;\r\n\r\n  if( !edges ){ return null; }\r\n\r\n  return (\r\n    <List\r\n      className={ className }\r\n      disablePadding\r\n    >\r\n      {\r\n        edges.map(({ node })=>(\r\n          <MenuListItem\r\n            key={ node.id }\r\n            node={ node }\r\n            depth={ depth }\r\n            />\r\n        ))\r\n      }\r\n    </List>\r\n  );\r\n}\r\n\r\nexport const ActiveContext = createContext({\r\n  active: \"/\",\r\n  setActive: ()=>{},\r\n});\r\n\r\n/* Main */\r\nconst SideBarNav = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  /* Router Hook */\r\n  const location = useLocation();\r\n\r\n  /* State */\r\n  const [ active, setActive ] = useState(location.pathname);\r\n  const value = useMemo(()=>({ active, setActive }), [active, setActive]);\r\n\r\n  /* GraphQL */\r\n  const { loading, error, data } = useQuery(\r\n    MENU_QUERY, {\r\n      client  // Lazy로 사용되능 Component에서는 client 전달 필수\r\n    }\r\n  ); \r\n  \r\n  /* GraphQL Result */\r\n  if( loading ){ return <CircularProgress />; }\r\n  if( error ){ return <p>{ error.message }</p>; }\r\n  if( !data ){ return <p>데이터가 존재하지 않습니다.</p>; }\r\n\r\n  /* Constant Variables */\r\n  const {\r\n    menus\r\n  } = data;\r\n\r\n  /* Rendering */\r\n  return (\r\n    <ErrorBoundary>\r\n      <ActiveContext.Provider value={ value }>\r\n        <MenuList menus={ menus } depth={ 1 } />\r\n      </ActiveContext.Provider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nSideBarNav.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default SideBarNav;"],"sourceRoot":""}