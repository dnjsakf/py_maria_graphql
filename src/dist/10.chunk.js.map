{"version":3,"sources":["webpack:///./src/layouts/MainLayout/SideBar/SideBar.js","webpack:///./src/layouts/MainLayout/SideBar/Profile/Profile.js","webpack:///./src/layouts/MainLayout/SideBar/SidebarNav/SideBarNav.js","webpack:///./src/graphql/query/menu.js"],"names":["useStyles","makeStyles","theme","drawer","width","breakpoints","up","marginTop","height","divider","margin","spacing","Container","styled","div","palette","white","SideBar","props","className","useContext","ResizeContext","open","setOpen","desktop","classes","useTheme","handleClose","useCallback","anchor","paper","onClose","variant","propTypes","PropTypes","string","avatar","name","Profile","user","alt","src","component","RouterLink","to","bio","object","defaultProps","item","display","paddingTop","paddingBottom","menuButton","fontFamily","color","blueGrey","padding","justifyContent","textTransform","letterSpacing","fontWeight","typography","fontWeightMedium","icon","alignItems","marginRight","activeItem","error","main","fontWeightLarge","expandIcon","ExpandIcon","isExpand","MenuListItem","node","depth","useState","ActiveContext","active","setActive","handleActive","e","id","handleCallapse","cmenu","edges","length","Fragment","clsx","disableGutters","style","paddingLeft","onClick","NavLink","link","menuName","in","timeout","MenuList","menus","disablePadding","map","key","createContext","SideBarNav","value","useMemo","useQuery","MENU_QUERY","loading","data","refetch","useEffect","Provider","gql"],"mappings":"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","file":"10.chunk.js","sourcesContent":["/* React */\r\nimport React, { useState, useCallback, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Styled */\r\nimport styled from 'styled-components';\r\n\r\n/* Material-UI */\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport Divider from '@material-ui/core/Divider'; \r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\n/* Context */\r\nimport { ResizeContext } from '@src/App';\r\n\r\n/* Child Components */\r\nimport Profile from './Profile';\r\nimport SidebarNav from './SidebarNav';\r\n\r\n/* Styles Hook */\r\nconst useStyles = makeStyles( theme => ({\r\n  drawer: {\r\n    width: 240,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 64,\r\n      height: 'calc(100% - 64px)'\r\n    }\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n}));\r\n\r\n/* Styled Components */\r\nconst Container = styled.div`\r\n  background-color: ${({ theme })=> theme.palette.white };\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  padding: ${({ theme })=> theme.spacing(2) }px;\r\n`;\r\n\r\n/* Main Component */\r\nconst SideBar = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  /* Context */\r\n  const { open, setOpen, desktop } = useContext(ResizeContext);\r\n  \r\n  /* Styles Hook */\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  /* Handlers */\r\n  const handleOpen = useCallback(()=>{\r\n    setOpen(true);\r\n  }, []);\r\n  const handleClose = useCallback(()=>{\r\n    setOpen(false);\r\n  }, []);\r\n  \r\n  /* Render */\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: classes.drawer\r\n      }}\r\n      onClose={ handleClose }\r\n      open={ open }\r\n      variant={ desktop ? 'persistent' : 'temporary' }\r\n    >\r\n      <Container theme={ theme }>\r\n        <Profile />\r\n        <Divider className={ classes.divider } />\r\n        <SidebarNav />\r\n      </Container>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nSideBar.propTypes = {\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default SideBar;","/* React */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Router */\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n/* Material-UI */\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/* Styled */\r\nimport styled from 'styled-components';\r\n\r\n/* Material Hook */\r\nconst useStyles = makeStyles( theme => ({\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n/* Styled Components */\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: fit-content;\r\n`;\r\n\r\n/* Main Component */\r\nconst Profile = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    user,\r\n    ...rest\r\n  } = props;\r\n  \r\n  /* Styles Hook */\r\n  const classes = useStyles();\r\n\r\n  /* Renderer */\r\n  return (\r\n    <Container\r\n      className={ className }\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={ classes.avatar }\r\n        src={ user.avatar }\r\n        component={ RouterLink }\r\n        to=\"/\"\r\n      />\r\n      <Typography\r\n        className={ classes.name }\r\n        variant=\"h4\"\r\n      >\r\n        { user.name }\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        { user.bio }\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string,\r\n  user: PropTypes.object,\r\n};\r\n\r\nProfile.defaultProps = {\r\n  user: {\r\n    name: 'Dochi',\r\n    avatar: '/public/images/avatars/dochi.jpeg',\r\n    bio: 'Developer'\r\n  },\r\n};\r\n\r\nexport default Profile;","/* React */\r\nimport React, { useMemo, useState, useCallback, useEffect, useContext, createContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* Router */\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n/* Material UI */\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n/* Material UI: icons */\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\n/* GraphQL */\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { MENU_QUERY } from '@graphql/query/menu';\r\n\r\n/* Custom Components */\r\nimport ErrorBoundary from '@components/ErrorBoundary';\r\nimport { CircularProgress } from '@components/Progress';\r\n\r\n/* Clsx */\r\nimport clsx from 'clsx';\r\n\r\n/* Styles Hook */\r\nconst useStyles = makeStyles((theme)=>({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  menuButton: {\r\n    fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"],\r\n    color: blueGrey[800],\r\n    padding: '5px 2px',\r\n    justifyContent: 'flex-start',\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    width: '100%',\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  icon: {\r\n    color: theme.palette.icon,\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  activeItem: {\r\n    color: theme.palette.error.main,\r\n    fontWeight: theme.typography.fontWeightLarge,\r\n    '& $icon': {\r\n      color: theme.palette.error.main\r\n    }\r\n  },\r\n  expandIcon: {\r\n    padding: '5px 2px',\r\n  },\r\n  divider: {\r\n    margin: \"2px 0\",\r\n  }\r\n}));\r\n\r\n/* Sub Component */\r\nconst ExpandIcon = ({ isExpand, open }) => (\r\n  isExpand ? ( open ? <ExpandLess /> : <ExpandMore />  ): null\r\n);\r\n\r\n/* Sub Component */\r\nconst MenuListItem = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    node,\r\n    depth,\r\n    ...rest\r\n  } = props;\r\n\r\n  /* State */\r\n  const [open, setOpen] = useState( true );\r\n  \r\n  /* Context */\r\n  const { active, setActive } = useContext(ActiveContext);\r\n\r\n  /* Styles Hook */\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  \r\n  /* Handler: Set active. */\r\n  const handleActive = useCallback((e)=>{\r\n    setActive(node.id);\r\n  }, [active, node]);\r\n\r\n  /* Handler: Open collapse. */\r\n  const handleCallapse = useCallback((e)=>{\r\n    setOpen(!open);\r\n  }, [open, node, active]);\r\n\r\n  /* Constant Variables */\r\n  const isExpand = node.cmenu && node.cmenu.edges.length > 0;\r\n\r\n  /* Rendering */\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem\r\n        className={\r\n          clsx({\r\n            [classes.item]: true,\r\n          }, className)\r\n        }\r\n        disableGutters\r\n      >\r\n        <Button\r\n          className={ \r\n            clsx({\r\n              [classes.menuButton]: true,\r\n              [classes.activeItem]: active == node.id,\r\n            })\r\n          }\r\n          style={{\r\n            paddingLeft: theme.spacing((depth-1)*2)\r\n          }}\r\n          onClick={ handleActive }\r\n          component={ NavLink }\r\n          to={ node.link }\r\n        >\r\n          { node.menuName }\r\n        </Button>\r\n        <IconButton\r\n          onClick={ handleCallapse }\r\n          className={ \r\n            clsx({\r\n              [classes.expandIcon]: true,\r\n            })\r\n          }\r\n        >\r\n          <ExpandIcon isExpand={ isExpand } open={ open } />\r\n        </IconButton>\r\n      </ListItem>\r\n      <Divider className={ classes.divider } />\r\n      {\r\n        isExpand && (\r\n          <Collapse in={ open } timeout=\"auto\" >\r\n            <MenuList menus={ node.cmenu } depth={ depth+1 }/>\r\n          </Collapse>\r\n        )\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n/* Sub Component */\r\nconst MenuList = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    depth,\r\n    menus: {\r\n      edges\r\n    },\r\n    ...rest\r\n  } = props;\r\n\r\n  if( !edges ){ return null; }\r\n\r\n  return (\r\n    <List\r\n      className={ className }\r\n      disablePadding\r\n    >\r\n      {\r\n        edges.map(({ node })=>(\r\n          <MenuListItem\r\n            key={ node.id }\r\n            node={ node }\r\n            depth={ depth }\r\n            />\r\n        ))\r\n      }\r\n    </List>\r\n  );\r\n}\r\n\r\nexport const ActiveContext = createContext({\r\n  active: null,\r\n  setActive: ()=>{},\r\n});\r\n\r\n/* Main */\r\nconst SideBarNav = props => {\r\n  /* Props */\r\n  const {\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  /* State */\r\n  const [ active, setActive ] = useState(null);\r\n  const value = useMemo(()=>({ active, setActive }), [active, setActive]);\r\n\r\n  /* GraphQL */\r\n  const { loading, error, data, refetch } = useQuery(MENU_QUERY);\r\n  \r\n  /* Side Effect: Set frist active menu. */\r\n  useEffect(()=>{\r\n    if( data && data.menus.edges.length > 0 && active == null ){\r\n      setActive(data.menus.edges[0].node.id);\r\n    }\r\n  }, [ data, active ]);\r\n  \r\n  /* GraphQL Result */\r\n  if( loading ){ return <CircularProgress />; }\r\n  if( error ){ return <p>{ error }</p>; }\r\n\r\n  /* Constant Variables */\r\n  const {\r\n    menus\r\n  } = data;\r\n\r\n  /* Rendering */\r\n  return (\r\n    <ErrorBoundary>\r\n      <ActiveContext.Provider value={ value }>\r\n        <MenuList menus={ menus } depth={ 1 } />\r\n      </ActiveContext.Provider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nSideBarNav.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default SideBarNav;","import gql from 'graphql-tag';\r\n\r\nexport const MENU_QUERY = gql`\r\n  query MenuQuery {\r\n    menus {\r\n      edgeCount\r\n      edges {\r\n        node {\r\n          id\r\n          menuType\r\n          menuId\r\n          menuName\r\n          link\r\n          icon\r\n          pmenu {\r\n            menuId\r\n            menuName\r\n            link\r\n            icon\r\n          }\r\n          cmenu {\r\n            edges {\r\n              node {\r\n                id\r\n                menuId\r\n                menuName\r\n                link\r\n                icon\r\n                cmenu {\r\n                  edges {\r\n                    node {\r\n                      id\r\n                      menuId\r\n                      menuName\r\n                      link\r\n                      icon\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } \r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}